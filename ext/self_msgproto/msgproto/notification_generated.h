// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_NOTIFICATION_SELFMESSAGING_H_
#define FLATBUFFERS_GENERATED_NOTIFICATION_SELFMESSAGING_H_

#include "flatbuffers/flatbuffers.h"

#include "types_generated.h"

namespace SelfMessaging {

struct Notification;
struct NotificationBuilder;

struct Notification FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NotificationBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_ID = 4,
    VT_MSGTYPE = 6,
    VT_ERROR = 8,
    VT_ERRTYPE = 10
  };
  const flatbuffers::String *id() const {
    return GetPointer<const flatbuffers::String *>(VT_ID);
  }
  SelfMessaging::MsgType msgtype() const {
    return static_cast<SelfMessaging::MsgType>(GetField<int8_t>(VT_MSGTYPE, 0));
  }
  const flatbuffers::String *error() const {
    return GetPointer<const flatbuffers::String *>(VT_ERROR);
  }
  SelfMessaging::ErrType errtype() const {
    return static_cast<SelfMessaging::ErrType>(GetField<int8_t>(VT_ERRTYPE, 0));
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_ID) &&
           verifier.VerifyString(id()) &&
           VerifyField<int8_t>(verifier, VT_MSGTYPE) &&
           VerifyOffset(verifier, VT_ERROR) &&
           verifier.VerifyString(error()) &&
           VerifyField<int8_t>(verifier, VT_ERRTYPE) &&
           verifier.EndTable();
  }
};

struct NotificationBuilder {
  typedef Notification Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_id(flatbuffers::Offset<flatbuffers::String> id) {
    fbb_.AddOffset(Notification::VT_ID, id);
  }
  void add_msgtype(SelfMessaging::MsgType msgtype) {
    fbb_.AddElement<int8_t>(Notification::VT_MSGTYPE, static_cast<int8_t>(msgtype), 0);
  }
  void add_error(flatbuffers::Offset<flatbuffers::String> error) {
    fbb_.AddOffset(Notification::VT_ERROR, error);
  }
  void add_errtype(SelfMessaging::ErrType errtype) {
    fbb_.AddElement<int8_t>(Notification::VT_ERRTYPE, static_cast<int8_t>(errtype), 0);
  }
  explicit NotificationBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<Notification> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<Notification>(end);
    return o;
  }
};

inline flatbuffers::Offset<Notification> CreateNotification(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> id = 0,
    SelfMessaging::MsgType msgtype = SelfMessaging::MsgType_MSG,
    flatbuffers::Offset<flatbuffers::String> error = 0,
    SelfMessaging::ErrType errtype = SelfMessaging::ErrType_ErrConnection) {
  NotificationBuilder builder_(_fbb);
  builder_.add_error(error);
  builder_.add_id(id);
  builder_.add_errtype(errtype);
  builder_.add_msgtype(msgtype);
  return builder_.Finish();
}

inline flatbuffers::Offset<Notification> CreateNotificationDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *id = nullptr,
    SelfMessaging::MsgType msgtype = SelfMessaging::MsgType_MSG,
    const char *error = nullptr,
    SelfMessaging::ErrType errtype = SelfMessaging::ErrType_ErrConnection) {
  auto id__ = id ? _fbb.CreateString(id) : 0;
  auto error__ = error ? _fbb.CreateString(error) : 0;
  return SelfMessaging::CreateNotification(
      _fbb,
      id__,
      msgtype,
      error__,
      errtype);
}

}  // namespace SelfMessaging

#endif  // FLATBUFFERS_GENERATED_NOTIFICATION_SELFMESSAGING_H_
