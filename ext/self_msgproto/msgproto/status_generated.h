// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_STATUS_SELFMESSAGING_H_
#define FLATBUFFERS_GENERATED_STATUS_SELFMESSAGING_H_

#include "flatbuffers/flatbuffers.h"

#include "types_generated.h"

namespace SelfMessaging {

struct Status;
struct StatusBuilder;

struct Status FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef StatusBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_ID = 4,
    VT_MSGTYPE = 6,
    VT_RECIPIENT = 8,
    VT_ONLINE = 10,
    VT_LAST_SEEN = 12
  };
  const flatbuffers::String *id() const {
    return GetPointer<const flatbuffers::String *>(VT_ID);
  }
  SelfMessaging::MsgType msgtype() const {
    return static_cast<SelfMessaging::MsgType>(GetField<int8_t>(VT_MSGTYPE, 0));
  }
  const flatbuffers::String *recipient() const {
    return GetPointer<const flatbuffers::String *>(VT_RECIPIENT);
  }
  bool online() const {
    return GetField<uint8_t>(VT_ONLINE, 0) != 0;
  }
  int64_t last_seen() const {
    return GetField<int64_t>(VT_LAST_SEEN, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_ID) &&
           verifier.VerifyString(id()) &&
           VerifyField<int8_t>(verifier, VT_MSGTYPE) &&
           VerifyOffset(verifier, VT_RECIPIENT) &&
           verifier.VerifyString(recipient()) &&
           VerifyField<uint8_t>(verifier, VT_ONLINE) &&
           VerifyField<int64_t>(verifier, VT_LAST_SEEN) &&
           verifier.EndTable();
  }
};

struct StatusBuilder {
  typedef Status Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_id(flatbuffers::Offset<flatbuffers::String> id) {
    fbb_.AddOffset(Status::VT_ID, id);
  }
  void add_msgtype(SelfMessaging::MsgType msgtype) {
    fbb_.AddElement<int8_t>(Status::VT_MSGTYPE, static_cast<int8_t>(msgtype), 0);
  }
  void add_recipient(flatbuffers::Offset<flatbuffers::String> recipient) {
    fbb_.AddOffset(Status::VT_RECIPIENT, recipient);
  }
  void add_online(bool online) {
    fbb_.AddElement<uint8_t>(Status::VT_ONLINE, static_cast<uint8_t>(online), 0);
  }
  void add_last_seen(int64_t last_seen) {
    fbb_.AddElement<int64_t>(Status::VT_LAST_SEEN, last_seen, 0);
  }
  explicit StatusBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<Status> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<Status>(end);
    return o;
  }
};

inline flatbuffers::Offset<Status> CreateStatus(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> id = 0,
    SelfMessaging::MsgType msgtype = SelfMessaging::MsgType_MSG,
    flatbuffers::Offset<flatbuffers::String> recipient = 0,
    bool online = false,
    int64_t last_seen = 0) {
  StatusBuilder builder_(_fbb);
  builder_.add_last_seen(last_seen);
  builder_.add_recipient(recipient);
  builder_.add_id(id);
  builder_.add_online(online);
  builder_.add_msgtype(msgtype);
  return builder_.Finish();
}

inline flatbuffers::Offset<Status> CreateStatusDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *id = nullptr,
    SelfMessaging::MsgType msgtype = SelfMessaging::MsgType_MSG,
    const char *recipient = nullptr,
    bool online = false,
    int64_t last_seen = 0) {
  auto id__ = id ? _fbb.CreateString(id) : 0;
  auto recipient__ = recipient ? _fbb.CreateString(recipient) : 0;
  return SelfMessaging::CreateStatus(
      _fbb,
      id__,
      msgtype,
      recipient__,
      online,
      last_seen);
}

inline const SelfMessaging::Status *GetStatus(const void *buf) {
  return flatbuffers::GetRoot<SelfMessaging::Status>(buf);
}

inline const SelfMessaging::Status *GetSizePrefixedStatus(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<SelfMessaging::Status>(buf);
}

inline bool VerifyStatusBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<SelfMessaging::Status>(nullptr);
}

inline bool VerifySizePrefixedStatusBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<SelfMessaging::Status>(nullptr);
}

inline void FinishStatusBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<SelfMessaging::Status> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedStatusBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<SelfMessaging::Status> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace SelfMessaging

#endif  // FLATBUFFERS_GENERATED_STATUS_SELFMESSAGING_H_
